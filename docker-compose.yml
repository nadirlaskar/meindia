version: '3.9'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog


  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "metadata-update:1:1,metadata-update-dlq:1:1"  # topic:partitions:replicas
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data

  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGO_DB_NAME: media-metadata
    ports:
      - "8081:8081"

  kafka-drop:
    image: obsidiandynamics/kafdrop
    container_name: kafka-drop
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    ports:
      - "9000:9000"

  media-uploader:
    image: media_uploader_service:latest
    container_name: media-uploader
    depends_on:
      - kafka
      - mongo
    environment:
      NODE_ENV: ${NODE_ENV}
      BIND_HOST: "0.0.0.0"
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_CONNECTION_TIMEOUT: 3000
    ports:
      - "3000:3000"

  meta-updater:
    image: meta_updater_service:latest
    container_name: meta-updater
    depends_on:
      - kafka
    environment:
      NODE_ENV: ${NODE_ENV}
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_CONNECTION_TIMEOUT: 3000

  meta-provider:
    image: meta_provider_service:latest
    container_name: meta-provider
    depends_on:
      - kafka
      - mongo
    environment:
      NODE_ENV: ${NODE_ENV}
    ports:
      - "5555:5555"

volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data:
  mongo_data: